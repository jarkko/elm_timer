Elm.Date = Elm.Date || {};
Elm.Date.Config = Elm.Date.Config || {};
Elm.Date.Config.Config_en_au = Elm.Date.Config.Config_en_au || {};
Elm.Date.Config.Config_en_au.make = function (_elm) {
   "use strict";
   _elm.Date = _elm.Date || {};
   _elm.Date.Config = _elm.Date.Config || {};
   _elm.Date.Config.Config_en_au = _elm.Date.Config.Config_en_au || {};
   if (_elm.Date.Config.Config_en_au.values) return _elm.Date.Config.Config_en_au.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Date = Elm.Date.make(_elm),
   $Date$Config = Elm.Date.Config.make(_elm),
   $Date$I18n$I_en_us = Elm.Date.I18n.I_en_us.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var config = {i18n: {dayShort: $Date$I18n$I_en_us.dayShort
                       ,dayName: $Date$I18n$I_en_us.dayName
                       ,monthShort: $Date$I18n$I_en_us.monthShort
                       ,monthName: $Date$I18n$I_en_us.monthName}
                ,format: {date: "%-d/%m/%Y"
                         ,longDate: "%A, %-d %B %Y"
                         ,time: "%-I:%M %p"
                         ,longTime: "%-I:%M:%S %p"
                         ,dateTime: "%-d/%m/%Y %-I:%M %p"
                         ,firstDayOfWeek: $Date.Mon}};
   return _elm.Date.Config.Config_en_au.values = {_op: _op,config: config};
};